plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.inu'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

processResources {
    from("src/main/resources") {
        include "fcm-service.json"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //mysql 의존성
    runtimeOnly 'com.mysql:mysql-connector-j'

    //oauth2 관련 의존성
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //security 의존성
    implementation 'org.springframework.boot:spring-boot-starter-security'

    //jwt 토큰 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    
    //swagger-ui 의존성 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

    //minio(사진서버) 의존성 추가
    implementation 'software.amazon.awssdk:s3:2.20.0'

    //직렬화
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

    //fcm
    implementation 'com.google.firebase:firebase-admin:9.4.3'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootRun {
    classpath = sourceSets.main.runtimeClasspath
}
